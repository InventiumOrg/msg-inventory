name: Build and Deploy to GKE

on:
  push:
    branches: ["main"]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1 # TODO: update to cluster name
  GKE_ZONE: us-central1-c # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  REPOSITORY: 205098647215.dkr.ecr.us-east-1.amazonaws.com/inventium/msg-inventory
  IMAGE: msg-inventory # Docker image name
  VERSION: 0.0.1 # Docker image version
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Login to AWS ECR
      #   run: |-
      #     aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 205098647215.dkr.ecr.us-east-1.amazonaws.com

      - name: Build
        run: |-
          docker build --tag "$REPOSITORY:$VERSION" . --build-arg SERVICE_NAME=$IMAGE --build-arg FOLDER=.

      - name: Publish
        run: |-
          docker push "$REPOSITORY:$VERSION"

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          # replacing the image name in the k8s template
          ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
